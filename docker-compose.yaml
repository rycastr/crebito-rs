version: "3.5"

# spare resources: CPU=0.85, Memory=
services:
  api01: &api
    build: .
    hostname: api01
    environment:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crebito
      APP_PORT: 4000
      POOL_SIZE: 4
    network_mode: host
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '10MB'

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api 
    hostname: api02
    environment:
      DATABASE_URL: ecto://postgres:postgres@localhost:5432/crebito
      APP_PORT: 4001
      POOL_SIZE: 4
      RELEASE_DISTRIBUTION: "name"
 
  nginx:
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '10MB'

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=crebito
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/postgres.conf:/etc/postgresql.conf
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '100MB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
